---
- name: Read PostgreSQL credentials
  shell: cat {{ vault_config_dir }}/db_credentials
  register: db_creds
  changed_when: false
  no_log: true

- name: Parse PostgreSQL credentials
  set_fact:
    vault_db_name: "{{ db_creds.stdout | regex_search('VAULT_DB_NAME=(.+)', '\\1') | first }}"
    vault_db_user: "{{ db_creds.stdout | regex_search('VAULT_DB_USER=(.+)', '\\1') | first }}"
    vault_db_password: "{{ db_creds.stdout | regex_search('VAULT_DB_PASSWORD=(.+)', '\\1') | first }}"
  no_log: true

- name: Create Vault configuration file
  template:
    src: vault.hcl.j2
    dest: "{{ vault_config_dir }}/vault.hcl"
    owner: "{{ vault_service_user }}"
    group: "{{ vault_service_group }}"
    mode: 0640
  notify: restart vault

- name: Enable and start Vault service
  systemd:
    name: "{{ vault_service_name }}"
    state: started
    enabled: yes
    daemon_reload: yes

- name: Wait for Vault to start
  wait_for:
    port: "{{ vault_port }}"
    delay: 5

- name: Check if Vault is initialized
  shell: VAULT_ADDR={{ vault_api_addr }} vault status -format=json | grep -q '"initialized":true'
  register: vault_initialized
  changed_when: false
  failed_when: false
  when: vault_auto_init | bool

- name: Initialize Vault if not already initialized
  shell: VAULT_ADDR={{ vault_api_addr }} vault operator init -key-shares=1 -key-threshold=1 -format=json > {{ vault_config_dir }}/init.json
  when: 
    - vault_auto_init | bool
    - vault_initialized.rc != 0
  register: vault_init
  no_log: true

- name: Get unseal key if Vault was just initialized
  shell: cat {{ vault_config_dir }}/init.json | jq -r '.unseal_keys_b64[0]'
  register: unseal_key
  when: 
    - vault_auto_init | bool
    - vault_init.changed
  no_log: true

- name: Unseal Vault if auto-unseal is enabled
  shell: VAULT_ADDR={{ vault_api_addr }} vault operator unseal {{ unseal_key.stdout }}
  when: 
    - vault_auto_init | bool
    - vault_auto_unseal | bool
    - vault_init.changed
  no_log: true